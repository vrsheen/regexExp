//
	> anything between the // will be found but only the first match
Other options to add are
//g > global - not only the first search, but it will find all occurances
//i > caseInsensitive - find the text comparing case insensitive
//m > multiline - force mention as multiline. useful with some regex like ^ or $

Ex: /cat/g     will find all the cat in the text
the cat and the dog are friends
cats are cute

Different Regex options
=======================
Sample Text for all below: 
			"Street side car all the geean needs to be sorted geeaan team fourNews."
+  ==> [one or more]  Ex: /e+/g will match e and ee
?  ==> [optional]     Ex: /e+a/g will match ea, eea. but not just ee; where as /e+a./g will also match ee as a is "optional"
*  ==> [0 or more]    (combination of + and ?) Ex: /e*a*/g which will match ee, e, a, eea, eeaa

.  ==> [Any single char expect newLine] Ex: /.ea/g will match eea and  tea. And /ea./g will match ean, eaa and eam

\w ==> [Any word]
\W ==> [negative version, anything other than a word]
{} ==> [Quantifier with a min and max] Ex: /\w{4}/g will find text which are 4 char long. And /\w{2,6}/g will find text between 2 to 6 char long. It can find 2 different text in the same word
\s ==> [Any whitespace]
\S ==> [negative version, anything other than a whitespace]
\d ==> [Any Digits/Numbers]

[] ==> [Character set] Ex: /[ng]e/g will match ge and ne. And /[a-zA-Z]e/g will match re, de, he, ge, ne, be, te and Ne. Will take one of the char while matching as it will not match nge
() ==> [Character group] Ex: /(t|h|g){1,3}e/g will match the, ge and te 

^  ==> [Beginning of a line] /^S/g will only look for the S char in the beginning of the first line. Where as /^S/gm will look S in all lines as m stand for multiline
$  ==> [End of a line] /.$/g will look for the . at the end of the last line. Similar with multiline we can look all lines

LookAhead or LookBehind
======================
?<= ==> [Positive lookbehind || Preceeded by] Ex: /(?<=ed)./g will match the s and the space. And /(?<=[ec]a)./g will match r,n,a,m
?<! ==> [Negative lookbehind || Not Preceeded by] Ex: /(?<!ed)./g will match the s and the space
?= ==> [Positive lookahead || Succeeded by] Ex: /.(?=ed)/g will match e,t. And /.(?<=[et]a)/g will match e,e,t
?! ==> [Negative lookahead || Not Succeeded by] Ex: /.(?!ed)/g will match all chars 


Phone Number Example:
/\(?(\d{3})\)?[ -]?(\d{3})[ -]?(\d{4})/g
Will match group the phonenumber in 3 different group
	1234567890
	234-567-8901
	345 678 9012
	(456) 789-0123
